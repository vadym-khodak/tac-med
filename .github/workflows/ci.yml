name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  code-quality:
    name: Code Quality & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        run: npm run install:all

      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            client:
              - 'client/**'
              - 'package.json'
              - 'package-lock.json'
              - 'client/package.json'
              - 'client/biome.json'
              - 'tsconfig.base.json'
            server:
              - 'server/**'
              - 'package.json'
              - 'package-lock.json'
              - 'server/package.json'
              - 'server/biome.json'
              - 'tsconfig.base.json'

      # Biome checks
      - name: Run Biome check on client
        if: steps.changes.outputs.client == 'true'
        run: |
          echo "🔍 Running Biome check on client..."
          npm run check:client

      - name: Run Biome check on server
        if: steps.changes.outputs.server == 'true'
        run: |
          echo "🔍 Running Biome check on server..."
          npm run check:server

      # TypeScript checks
      - name: TypeScript check - Client
        if: steps.changes.outputs.client == 'true'
        run: |
          echo "📝 Running TypeScript check on client..."
          cd client && npx tsc --noEmit

      - name: TypeScript check - Server
        if: steps.changes.outputs.server == 'true'
        run: |
          echo "📝 Running TypeScript check on server..."
          cd server && npx tsc --noEmit

      # Build checks
      - name: Build client
        if: steps.changes.outputs.client == 'true'
        run: |
          echo "🏗️ Building client..."
          npm run build:client

      - name: Build server
        if: steps.changes.outputs.server == 'true'
        run: |
          echo "🏗️ Building server..."
          npm run build:server

      # Summary
      - name: Generate summary
        if: always()
        run: |
          echo "## CI Results 🚀" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.changes.outputs.client }}" == "true" ]]; then
            echo "### Client App 📱" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Biome formatting and linting" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ TypeScript compilation" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Build successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Client App 📱" >> $GITHUB_STEP_SUMMARY
            echo "- ⏭️ No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.changes.outputs.server }}" == "true" ]]; then
            echo "### Server App 🖥️" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Biome formatting and linting" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ TypeScript compilation" >> $GITHUB_STEP_SUMMARY  
            echo "- ✅ Build successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Server App 🖥️" >> $GITHUB_STEP_SUMMARY
            echo "- ⏭️ No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All checks passed! 🎉" >> $GITHUB_STEP_SUMMARY